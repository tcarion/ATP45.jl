var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = ATP45","category":"page"},{"location":"#ATP45","page":"Home","title":"ATP45","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ATP45.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [ATP45]","category":"page"},{"location":"#ATP45.AbstractModel","page":"Home","title":"ATP45.AbstractModel","text":"AbstractModel\n\nDetermine the type of APT-45 that will be run. Each model is a callable object that takes the needed inputs as arguments.\n\n\n\n\n\n","category":"type"},{"location":"#ATP45.AbstractReleaseType","page":"Home","title":"ATP45.AbstractReleaseType","text":"AbstractReleaseType <: AbstractCategory\n\nDiscriminate between the release type (ex: Air Contaminating Attack, Ground Contaminating Attacks)\n\n\n\n\n\n","category":"type"},{"location":"#ATP45.AbstractWeapon","page":"Home","title":"ATP45.AbstractWeapon","text":"AbstractWeapon <: AbstractCategory\n\nDiscriminate between the type of weapon (Chemical, Biological, Radiological, Nuclear)\n\n\n\n\n\n","category":"type"},{"location":"#ATP45.AbstractZoneFeature","page":"Home","title":"ATP45.AbstractZoneFeature","text":"AbstractZoneFeature{N, T}\n\nAn ATP-45 Zone{N, T} with some properties related to it (typically the type of zone, e.g. release or hazard). It implements the GeoInterface.Feature trait.\n\n\n\n\n\n","category":"type"},{"location":"#ATP45.Atp45Result","page":"Home","title":"ATP45.Atp45Result","text":"Atp45Result\n\nCollection of zones representing the result of an ATP-45 procedure result. Also contains relevant information about the input conditions. It implements the GeoInterface.FeatureCollection trait.\n\n\n\n\n\n","category":"type"},{"location":"#ATP45.ReleaseLocation","page":"Home","title":"ATP45.ReleaseLocation","text":"ReleaseLocation{N, T}\n\nRepresents the N locations of the release(s).\n\nExamples\n\n# We create a triangle like border (3 vertices):\njulia> coords = [\n    [6., 49.],\n    [6., 51.],\n]\njulia> ReleaseLocation(coords)\nReleaseLocation{2, Float64}(((6.0, 49.0), (6.0, 51.0)))\n\n\n\n\n\n","category":"type"},{"location":"#ATP45.Zone","page":"Home","title":"ATP45.Zone","text":"Zone{N, T} <: AbstractZone{N, T}\n\nDefines a closed polygon with N vertices for representing a ATP-45 zone. It implements the GeoInterface.Polygon trait.\n\n\n\n\n\n","category":"type"},{"location":"#ATP45.ZoneBoundary","page":"Home","title":"ATP45.ZoneBoundary","text":"ZoneBoundary{N, T}\n\nRepresents the border for a ATP45 zone. N is the number of vertices defining the zone. It implements the GeoInterface.LinearRing trait.\n\nExamples\n\n# We create a triangle like border (3 vertices):\njulia> coords = [\n    [6., 49.],\n    [5., 50.],\n    [4., 49.],\n]\njulia> ZoneBoundary(coords)\nZoneBoundary{3, Float64}(((6.0, 49.0), (5.0, 50.0), (4.0, 49.0)))\n\n\n\n\n\n","category":"type"},{"location":"#ATP45._2windvector-Tuple{WindDirection}","page":"Home","title":"ATP45._2windvector","text":"_2windvector(wind)\n\nConvert the speed and azimuth of the wind into the coordinates of the wind vector.\n\n\n\n\n\n","category":"method"},{"location":"#ATP45.circle_coordinates-Tuple{Number, Number, Number}","page":"Home","title":"ATP45.circle_coordinates","text":"circle_coordinates(lon::Number, lat::Number, radius::Number, res)\n\nCalculate the coordinates of a circle like zone given the center (lon, lat) and the radius in meters. res is the number of points on the circle.\n\n\n\n\n\n","category":"method"},{"location":"#ATP45.descend-Tuple{ATP45.TreeNode, Any}","page":"Home","title":"ATP45.descend","text":"descend(node::TreeNode, model_params) :: TreeNode\n\nDiscriminate between the children of node according to the parameters in model_params.\n\nExamples\n\njulia> ex = Simplified => [\n               ChemicalWeapon => [\n                   LowerThan10 => (:_circle_circle, 2_000, 10_000),\n                   HigherThan10 => (:_circle_triangle, 2_000, 10_000),\n               ],\n               BiologicalWeapon => [\n                   LowerThan10 => (:_circle_circle, 1_000, 10_000),\n                   HigherThan10 => (:_circle_triangle, 1_000, 10_000),\n               ],\n           ]\njulia> model_params = (BiologicalWeapon(),)\njulia> descend(TreeNode(ex), model_params)\nBiologicalWeapon()\n├─ LowerThan10()\n│  └─ (:_circle_circle, 1000, 10000)\n└─ HigherThan10()\n   └─ (:_circle_triangle, 1000, 10000)\n\n\n\n\n\n","category":"method"},{"location":"#ATP45.descendall-Tuple{ATP45.TreeNode, Any}","page":"Home","title":"ATP45.descendall","text":"descendall(node::TreeNode, model_params) :: TreeNode{<:Tuple}\n\nBrowse the tree starting at node, choosing the path following what is specified in model_params.\n\nExamples\n\njulia> ex = Simplified => [\n               ChemicalWeapon => [\n                   LowerThan10 => (:_circle_circle, 2_000, 10_000),\n                   HigherThan10 => (:_circle_triangle, 2_000, 10_000),\n               ],\n               BiologicalWeapon => [\n                   LowerThan10 => (:_circle_circle, 1_000, 10_000),\n                   HigherThan10 => (:_circle_triangle, 1_000, 10_000),\n               ],\n           ]\njulia> model_params = (BiologicalWeapon(), WindDirection(45, 2))\njulia> descendall(TreeNode(ex), model_params)\n(:_circle_triangle, 1000, 10000)\n\n\n\n\n\n","category":"method"},{"location":"#ATP45.horizontal_walk-Union{Tuple{T}, Tuple{Vector{T}, T, T}} where T<:Number","page":"Home","title":"ATP45.horizontal_walk","text":"horizontal_walk(lon::AbstractFloat, lat::AbstractFloat, distance::AbstractFloat, azimuth::AbstractFloat)\n\nCompute the end location given a starting location lon and lat in degrees, a distance distance in meters and an azimuth azimuth in degrees (the reference direction is North)\n\n\n\n\n\n","category":"method"},{"location":"#ATP45.properties-Tuple{Any}","page":"Home","title":"ATP45.properties","text":"properties(iid::String)\nproperties(obj)\n\nGive the properties defined on the ATP45 object, given the object itsels obj or its id iid.\n\nExamples\n\njulia> ATP45.properties(ChemicalWeapon())\n4-element Vector{Pair{Symbol, String}}:\n           :id => \"chem\"\n     :longname => \"Chemical\"\n    :paramtype => \"category\"\n :internalname => \"ChemicalWeapon\"\n\n\n\n\n\n","category":"method"},{"location":"#ATP45.triangle_coordinates-NTuple{5, Any}","page":"Home","title":"ATP45.triangle_coordinates","text":"triangle_coordinates(lon, lat, azimuth, dhd, back_distance)\n\nCalculate the coordinates of the triangle like zone given the release location, the wind direction azimuth, the downwind hazard distance dhd in meters.\n\n\n\n\n\n","category":"method"},{"location":"#ATP45.wind_azimuth-Tuple{Any, Any}","page":"Home","title":"ATP45.wind_azimuth","text":"wind_azimuth(Vx, Vy)\n\nAzimuth in degrees, the reference direction is North\n\n\n\n\n\n","category":"method"},{"location":"#ATP45.wind_speed-Tuple{Any, Any}","page":"Home","title":"ATP45.wind_speed","text":"wind_speed(Vx, Vy)\n\nVx and Vy are the components of the wind speed vector on the West-East and South-North directions respectively Return the wind speed\n\n\n\n\n\n","category":"method"}]
}
